# Borra todos los elementos bajo el índice tutorial
curl -XDELETE "http://localhost:9200/tutorial"

# Agrega un nuevo documento al indice tutorial en el tipo helloworld
curl -XPUT "http://localhost:9200/tutorial/helloworld/1" -d'
{
    "message": "Hello World!" 
}'

# Error - PUT necesita de ID para poder agregar un documento
# No handler found for uri [/tutorial/helloworld] and method [PUT]
curl -XPUT "http://localhost:9200/tutorial/helloworld" -d'
{
	"datos":"dato"
}'

# Petición correcta pero retornará error porque el documento con ID 1 existe y estamos forzando al _create
curl -XPUT "http://localhost:9200/tutorials/helloworlds/1/_create" -d'
{
    "datos":"dato"

}'

# Error - PUT no tiene un handler para _update, únicamente permite creates
curl -XPUT "http://localhost:9200/tutorials/helloworlds/1/_update" -d'
{
    "dato2":"dato"
}'

# Correcto - POST no proporciona ID pero ES lo generará de forma automática
curl -XPOST "http://localhost:9200/tutorial/helloworld" -d'
{ 
    "message": "Hello World!" 
}'

# Correcto - En este caso, el POST se comporta como un PUT
curl -XPOST "http://localhost:9200/tutorial/helloworld/20" -d'
{ 
    "message": "Hello World from the cradle!" 
}'

# Correcto - sobreescribimos el contenido del documento con ID 20
curl -XPOST "http://localhost:9200/tutorial/helloworld/20" -d'
{ 
    "message": "Hello World from the cradle!",
    "internal" : {
		"value" : 10,
		"internal2" : {
			"value" : 10
		}
	}
}'

# Error - el documento ya existe y estamos forzando al POST a que haga un create
curl -XPOST "http://localhost:9200/tutorials/helloworlds/1/_create" -d'
{
    "message": "Hello World from the cradle!",
		"internal" : {
			"value" : 10,
			"internal2" : {
				"value" : 10
		}
	}
}'

# Correcto - hace un upsert sobre el documento con ID igual a 2
curl -XPOST "http://localhost:9200/tutorial/helloworld/1/_update" -d'
{
    "doc": {
		"message": "Hello World from the cradle!",
			"internal" : {
				"value" : 10,
				"internal2" : {
					"value" : 10
			}
		}
	}
}'

# Correcto
curl -XPOST "http://localhost:9200/tutorial/helloworld/9/_update" -d'
{
    "doc": {
		"dato2":"dato"
	},
    "doc_as_upsert" : true
}'

# Ejecuta un script sobre el campo tags agregando valor y nombre al contenido
curl -XPOST "http://localhost:9200/tutorial/helloworld/9/_update" -d'
{
    "script": "if (ctx._source.tags == null) { ctx._source.tags = [newtag] } else { ctx._source.tags.add(newtag) }",
	"params": {
		"newtag": {
			"value": 7,
			"nombre": "Juanito"
		}
	}
}'

# Obtiene el documento con ID igual a 9 en el indice tutorial y el tipo helloworld
curl -XGET "http://localhost:9200/tutorial/helloworld/9"

# Borra el documento en el índice tutorial, en el tipo helloworld con id igual a 1
curl -XDELETE "http://localhost:9200/tutorial/helloworld/1"

# Error controlado, retorna un found igual a false notificando el no borrado
curl -XDELETE "http://localhost:9200/tutorial/helloworld/3"

# Agregamos de nuevo el documento borrado
curl -XPOST "http://localhost:9200/tutorial/helloworld/1" -d'
{ 
    "message": "Hello World!" 
}'

# Retorna únicamente el valor del contenido del documento, omitiendo el metadata
curl -XGET "http://localhost:9200/tutorial/helloworld/1"

# Limita el contenido retornado al campo message
curl -XGET "http://localhost:9200/tutorial/helloworld/1?fields=message"

